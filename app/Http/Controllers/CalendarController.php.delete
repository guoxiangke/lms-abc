<?php

namespace App\Http\Controllers;
use App\Models\Order;
use App\Models\Rrule;
use App\Models\ClassRecord;

use Carbon\Carbon;
use Illuminate\Http\Request;

use App\Repositories\OrderRepository;

class CalendarController extends Controller
{
    /**
     * @var OrderRepository
     */
    protected $repository;

    public function __construct(OrderRepository $repository) {
        $this->repository = $repository;

        $this->middleware(['admin']); // isAdmin 中间件让具备指定权限的用户才能访问该资源
    }
    
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function show(Order $order)
    {
        $events = [];
        // dd($order->hasClassToday());
        if(!$order->isActive()){
            //todo
            // return redirect()->back()->with('message', 'order is not Active.');
        }

        // dd(
        //     // Rrule::find(1)->classRecords()->exceptions()->get()->toArray(),//->exceptions()->get()->toArray(),
        //     $order->regenAolsSchedule(),
        // //     // $order->reDiffAols(),
        // //     // $order->historyRecords(),
        // //     // $order->getAllAols(), 
        // //     // $order->getDiffAols(),
        //     $order->regenRruleSchedule(),
        // );

        collect($order->regenRruleSchedule())
            ->map(function($startDateString) use (&$events){
                $start = Carbon::createFromFormat('Y-m-d H:i:s', $startDateString);
                //去除今日的 计划。 今日的0点生生了记录
                if($start->format('Y-m-d') ==  Carbon::now()->format('Y-m-d') ){
                    return;
                }
                $events[] = [
                    'start' =>  $startDateString,
                    'end' =>  $start->addMinutes(25)->format('Y-m-d H:i:s'),
                    'title' =>  $start->subMinutes(25)->format('m/d H:i'). '有课',
                    'icon' =>  'lunch',
                    'class' =>  'schedule',
                    'content' =>  '<i class="v-icon material-icons">directions_run</i>',
                    // 'background' =>  true,
                    'contentFull' =>  'My shopping list is rather long:<br><ul><li>Avocadoes</li><li>Tomatoes</li><li>Potatoes</li><li>Mangoes</li></ul>',
                ];
            });

        collect($order->reDiffAols())
            ->map(function($startDateString) use (&$events){
                $start = Carbon::createFromFormat('Y-m-d H:i:s', $startDateString);
                $events[] = [
                    'start' =>  $startDateString,
                    'end' =>  Carbon::createFromFormat('Y-m-d H:i:s', $startDateString)->addMinutes(25)->format('Y-m-d H:i:s'),
                    'title' =>  $start->format('m/d H:i') . ' 计划请假',
                    'icon' =>  'lunch',
                    'class' =>  'aol',
                    'content' =>  '<i class="v-icon material-icons">directions_run</i>',
                    // 'background' =>  true,
                    'contentFull' =>  'My shopping list is rather long:<br><ul><li>Avocadoes</li><li>Tomatoes</li><li>Potatoes</li><li>Mangoes</li></ul>',
                ];
            });

        $order->classRecords()//historyRecords
            ->each(function($classRecord) use (&$events, $order){
                $link = route('classRecords.index', $order->id);
                $now = Carbon::now()->format('Y-m-d ');
                $isToday = $classRecord->generated_at->format('Y-m-d ') == $now;
                $title = $isToday?'⚠️今日有课':'上课记录';
                if($classRecord->exception){
                    //学生老师/正常/异常请假
                    $title = ClassRecord::EXCEPTION_TYPES[$classRecord->exception];
                }
                $events[] = [
                    'start' =>  $classRecord->generated_at->format('Y-m-d H:i:s'),
                    'end' =>  $classRecord->generated_at->addMinutes(25)->format('Y-m-d H:i:s'),
                    'title' => $classRecord->generated_at->format('m/d H:i') . $title,
                    'icon' =>  'lunch',
                    'class' => $isToday?'today':'history',
                    'content' =>  '<i class="v-icon material-icons">directions_run</i>',
                    // 'background' =>  true,
                    'contentFull' =>  'My shopping list is rather long:<br><ul><li>Avocadoes</li><li>Tomatoes</li><li>Potatoes</li><li>Mangoes</li></ul>',
                ];
            });
        
        // dd($events);
        // $default_events = json_encode($events);
        return view('calendars.index', compact('order','events'));
    }
}
